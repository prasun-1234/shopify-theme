<div
  x-data="
    {
      loading: false,
      sort: '{{ sort_by }}',
      sortCollection(){
        this.loading = true;
         fetch('/collections/{{ collection.handle }}?sort_by=' + this.sort)
         .then(response => response.text())
         .then(data => {
           let html_div = document.createElement('div');
           html_div.innerHTML = data;
          let html_dom = html_div.querySelector('#productGridContainer').innerHTML;

            document.querySelector('#productGridContainer').innerHTML = html_dom
            history.replaceState(null,null,'?sort_by=' + this.sort)
         })
         .catch(error => console.log('Error:', error))
         .finally(() => this.loading = false)
      }
    }
  "
>
  {% render 'loader1' %}
  <label for="sort-by" hidden id="sort-by-label">Sort By</label>
  <select id="sort-by" x-model="sort" @change="sortCollection()" aria-labelledby="sort-by-label">
    {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
    {% for option in collection.sort_options %}
      <option
        value="{{ option.value }}"
        {% if option.value == sort_by %}
          selected="selected"
        {% endif %}
      >
        {{ option.name }}
      </option>
    {% endfor %}
  </select>
</div>
