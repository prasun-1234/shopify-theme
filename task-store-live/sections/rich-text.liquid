{{ 'section-rich-text.css' | asset_url | stylesheet_tag }}

{%- style -%}
  #{{ section.id }} {
    padding-top: {{ section.settings.padding_top | divided_by: 2 }}px;
    padding-bottom: {{ section.settings.padding_bottom | divided_by: 2 }}px;
  }
  .section-{{ section.id }}-padding{
      height:auto;
  }
  @media screen and (min-width: 980px) {
    #{{ section.id }} {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
    .section-{{ section.id }}-padding{
      height:{{ section.settings.height }}px;
    }
  }
{%- endstyle -%}

<section class="rich_text_banner" id="{{ section.id }}">
  <div class="container">
    <div class="rich-text section-{{ section.id }}-padding">
      {% if section.settings.enable_gradient == true %}
        <div class="inner-gradient">
          <div class="el1" style="background-color: {{ section.settings.bg_1 }};"></div>
          <div class="el2" style="background-color: {{ section.settings.bg_2 }};"></div>
        </div>
      {% endif %}
      <div class="container">
        <div class="rich-text__wrapper">
          <div class="rich-text__blocks {{ section.settings.content_alignment }}">
            {%- for block in section.blocks -%}
              {%- case block.type -%}
                {%- when 'heading' -%}
                  <h2
                    id="gradientRichText"
                    textData="{{ block.settings.gradient_text }}"
                    class="h3 rich-text__heading rte inline-richtext {{ block.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                    {{ block.shopify_attributes }}
                    {% if settings.animations_reveal_on_scroll %}
                      data-cascade
                      style="--animation-order: {{ forloop.index }};"
                    {% endif %}
                  >
                    {{ block.settings.heading }}
                  </h2>
                {%- when 'caption' -%}
                  <p
                    class="rich-text__caption {{ block.settings.text_style }} {{ block.settings.text_style }}--{{ block.settings.text_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                    {{ block.shopify_attributes }}
                    {% if settings.animations_reveal_on_scroll %}
                      data-cascade
                      style="--animation-order: {{ forloop.index }};"
                    {% endif %}
                  >
                    {{ block.settings.caption | escape }}
                  </p>
                {%- when 'text' -%}
                  <div
                    class="rich-text__text rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                    {{ block.shopify_attributes }}
                    {% if settings.animations_reveal_on_scroll %}
                      data-cascade
                      style="--animation-order: {{ forloop.index }};"
                    {% endif %}
                  >
                    {{ block.settings.text }}
                  </div>
                {%- when 'button' -%}
                  <div
                    class="rich-text__buttons {% if block.settings.button_label != blank and block.settings.button_label_2 != blank %} rich-text__buttons--multiple{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                    {{ block.shopify_attributes }}
                    {% if settings.animations_reveal_on_scroll %}  data-cascade style="--animation-order: {{ forloop.index }};" {% endif %}
                  >
                    {%- if block.settings.button_label != blank and block.settings.button_link != blank -%}
                      <a href="{{ block.settings.button_link }}"
                        class="hover-button button{% if block.settings.button_style_secondary %} button--secondary{% else %} button--primary{% endif %}"
                        >
                        {% render 'button-primary', text: block.settings.button_label | escape %}
                      </a>
                    {%- endif -%}
                    {%- if block.settings.button_label_2 != blank -%}
                      <a {% if block.settings.button_link_2 == blank %} role="link" aria-disabled="true" {% else %} href="{{ block.settings.button_link_2 }}" {% endif %}
                        class="hover-button button{% if block.settings.button_style_secondary_2 %} button--secondary{% else %} button--primary{% endif %}"
                        >
                        {% render 'button-primary', text: block.settings.button_label_2 | escape %}
                      </a>
                    {%- endif -%}
                  </div>
              {%- endcase -%}
            {%- endfor -%}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

{% schema %}
{
  "name": "t:sections.rich-text.name",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "range",
      "id": "height",
      "label": "Banner Height",
      "max": 800,
      "min": 550,
      "step": 50,
      "default": 700
    },
    {
      "type": "checkbox",
      "id": "enable_gradient",
      "label": "Enable Hover Gradient",
      "default": true
    },
    {
      "type": "color",
      "id": "bg_1",
      "label": "Background color 1"
    },
    {
      "type": "color",
      "id": "bg_2",
      "label": "Background color 2"
    },
    {
      "type": "select",
      "id": "content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.rich-text.settings.content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.rich-text.settings.content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.rich-text.settings.content_alignment.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.rich-text.settings.content_alignment.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 60
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.rich-text.blocks.heading.name",
      "limit": 3,
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Talk about your brand",
          "label": "t:sections.rich-text.blocks.heading.settings.heading.label"
        },
        {
          "type": "text",
          "id": "gradient_text",
          "label": "Gradient Text",
          "default": "Shopify",
          "info": "Write a text that will be used as gradient color.Accept only 1 word"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            },
            {
              "value": "hxl",
              "label": "t:sections.all.heading_size.options__4.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        }
      ]
    },
    {
      "type": "caption",
      "name": "t:sections.rich-text.blocks.caption.name",
      "limit": 3,
      "settings": [
        {
          "type": "text",
          "id": "caption",
          "default": "Add a tagline",
          "label": "t:sections.rich-text.blocks.caption.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "subtitle",
              "label": "t:sections.rich-text.blocks.caption.settings.text_style.options__1.label"
            },
            {
              "value": "caption-with-letter-spacing",
              "label": "t:sections.rich-text.blocks.caption.settings.text_style.options__2.label"
            }
          ],
          "default": "caption-with-letter-spacing",
          "label": "t:sections.rich-text.blocks.caption.settings.text_style.label"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "small",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__1.label"
            },
            {
              "value": "medium",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__2.label"
            },
            {
              "value": "large",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__3.label"
            }
          ],
          "default": "medium",
          "label": "t:sections.rich-text.blocks.caption.settings.caption_size.label"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.rich-text.blocks.text.name",
      "limit": 3,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Design-led digital products</p>",
          "label": "t:sections.rich-text.blocks.text.settings.text.label"
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.rich-text.blocks.buttons.name",
      "limit": 2,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "default": "Button label",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_label_1.label",
          "info": "t:sections.rich-text.blocks.buttons.settings.button_label_1.info"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_link_1.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary",
          "default": false,
          "label": "t:sections.rich-text.blocks.buttons.settings.button_style_secondary_1.label"
        },
        {
          "type": "text",
          "id": "button_label_2",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_label_2.label",
          "info": "t:sections.rich-text.blocks.buttons.settings.button_label_2.info"
        },
        {
          "type": "url",
          "id": "button_link_2",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_link_2.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary_2",
          "default": false,
          "label": "t:sections.rich-text.blocks.buttons.settings.button_style_secondary_2.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.rich-text.presets.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "button"
        }
      ]
    }
  ]
}
{% endschema %}

<script defer>
  const gradientText = document.querySelector('#gradientRichText');

  if (gradientText) {
    let text = gradientText.innerText;
    function updateGradient(replaceText) {
      let result = text.replace(replaceText, `<span class="gradient-text">${replaceText}</span>`);
      return result;
    }
    gradientText.innerHTML = updateGradient(gradientText.getAttribute('textData'));
  }

  let button = document.querySelector('#{{ section.id }} .hover-button');
  
  if (button) {
    button.addEventListener('mouseenter', (e) => {
      button.closest('.rich_text_banner').classList.add('banner-active');
      button.closest('.rich_text_banner').querySelector('.inner-gradient').style.animationPlayState = 'running';
    });
    button.addEventListener('mouseleave', (e) => {
      button.closest('.rich_text_banner').classList.remove('banner-active');
      button.closest('.rich_text_banner').querySelector('.inner-gradient').style.animationPlayState = 'paused';
    });
  }
</script>
